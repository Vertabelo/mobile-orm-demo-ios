//
// CountryDAO.h
//
// DAO for Table country.
//
// Generated by Mobi-ORM on Mon Nov 02 16:21:35 CET 2015
//

#import "Country.h"
#import "MOLExp.h"
#import "MOAExp.h"
#import "MOTableExpression.h"
#import "MOColumn.h"
#import "MOSelectQuery.h"
#import "MOInsertStatement.h"
#import "MOUpdateStatement.h"
#import "MODeleteStatement.h"
#import "MOSQLiteDataSource.h"
#import "MORowHandlerForNumber.h"
#import "City.h"

@interface CountryDAO : NSObject

@property (readonly) MOTableExpression *TABLE_EXPRESSION;

@property (readonly) MOColumn *ID;
@property (readonly) MOColumn *NAME;

@property (readonly) id <MORowHandler> rowHandler;

+ (CountryDAO *)daoWithDataSource:(id <MOSQLiteDataSource>)dataSource;
- (id)initWithDataSource:(id <MOSQLiteDataSource>)dataSource;

- (NSArray *)select:(MOSelectQuery *)query;
- (NSArray *)select:(MOSelectQuery *)query withRowHandler:(id <MORowHandler>)rowHandler;
- (Country *)selectOne:(MOSelectQuery *)query;

- (Country *)getById:(NSNumber *)anId;
- (Country *)getByName:(NSString *)aName;
- (Country *)getByCity:(City *)city;

- (NSArray *)getCountryArray;
- (NSArray *)getCountryArrayOrderAscByColumn:(MOAExp *)orderBy;
- (NSArray *)getCountryArrayOrderDescByColumn:(MOAExp *)orderBy;
- (NSArray *)getCountryArrayWhere:(MOLExp *)where;
- (NSArray *)getCountryArrayWhere:(MOLExp *)where orderAscByColumn:(MOAExp *)orderBy;
- (NSArray *)getCountryArrayWhere:(MOLExp *)where orderDescByColumn:(MOAExp *)orderBy;

- (NSUInteger)getCount;
- (NSUInteger)getCountWhere:(MOLExp *)where;

- (id)invokeFunction:(NSString *)name withArgument:(MOAExp *)arg;
- (id)invokeFunction:(NSString *)name withArgument:(MOAExp *)arg where:(MOLExp *)where;
- (id)invokeForAllFunction:(NSString *)name;

- (void)insert:(MOInsertStatement *)query;
- (void)insertCountry:(Country *)country;
- (void)insertCountryArray:(NSArray *)array;

- (void)update:(MOUpdateStatement *)query;
- (void)updateCountry:(Country *)country;
- (void)updateCountryArray:(NSArray *)array;

- (void)delete:(MODeleteStatement *)query;
- (void)deleteCountry:(Country *)country;
- (void)deleteCountryArray:(NSArray *)array;
- (void)deleteById:(NSNumber *)anId;
- (void)deleteWhere:(MOLExp *)where;

- (BOOL)isEqualByPK:(Country *)country1 and:(Country *)country2;

@end

