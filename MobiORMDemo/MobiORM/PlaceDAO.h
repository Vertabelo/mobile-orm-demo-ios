//
// PlaceDAO.h
//
// DAO for Table place.
//
// Generated by Mobi-ORM on Mon Nov 02 16:21:35 CET 2015
//

#import "Place.h"
#import "MOLExp.h"
#import "MOAExp.h"
#import "MOTableExpression.h"
#import "MOColumn.h"
#import "MOSelectQuery.h"
#import "MOInsertStatement.h"
#import "MOUpdateStatement.h"
#import "MODeleteStatement.h"
#import "MOSQLiteDataSource.h"
#import "MORowHandlerForNumber.h"
#import "Address.h"
#import "PlaceTag.h"

@interface PlaceDAO : NSObject

@property (readonly) MOTableExpression *TABLE_EXPRESSION;

@property (readonly) MOColumn *ID;
@property (readonly) MOColumn *NAME;
@property (readonly) MOColumn *ADDRESS_ID;
@property (readonly) MOColumn *RATING;
@property (readonly) MOColumn *ADDED;
@property (readonly) MOColumn *COMMENT;

@property (readonly) id <MORowHandler> rowHandler;

+ (PlaceDAO *)daoWithDataSource:(id <MOSQLiteDataSource>)dataSource;
- (id)initWithDataSource:(id <MOSQLiteDataSource>)dataSource;

- (NSArray *)select:(MOSelectQuery *)query;
- (NSArray *)select:(MOSelectQuery *)query withRowHandler:(id <MORowHandler>)rowHandler;
- (Place *)selectOne:(MOSelectQuery *)query;

- (Place *)getById:(NSNumber *)anId;
- (Place *)getByAddress:(Address *)address;
- (Place *)getByPlaceTag:(PlaceTag *)placeTag;

- (NSArray *)getPlaceArray;
- (NSArray *)getPlaceArrayOrderAscByColumn:(MOAExp *)orderBy;
- (NSArray *)getPlaceArrayOrderDescByColumn:(MOAExp *)orderBy;
- (NSArray *)getPlaceArrayWhere:(MOLExp *)where;
- (NSArray *)getPlaceArrayWhere:(MOLExp *)where orderAscByColumn:(MOAExp *)orderBy;
- (NSArray *)getPlaceArrayWhere:(MOLExp *)where orderDescByColumn:(MOAExp *)orderBy;

- (NSUInteger)getCount;
- (NSUInteger)getCountWhere:(MOLExp *)where;

- (id)invokeFunction:(NSString *)name withArgument:(MOAExp *)arg;
- (id)invokeFunction:(NSString *)name withArgument:(MOAExp *)arg where:(MOLExp *)where;
- (id)invokeForAllFunction:(NSString *)name;

- (void)insert:(MOInsertStatement *)query;
- (void)insertPlace:(Place *)place;
- (void)insertPlaceArray:(NSArray *)array;

- (void)update:(MOUpdateStatement *)query;
- (void)updatePlace:(Place *)place;
- (void)updatePlaceArray:(NSArray *)array;

- (void)delete:(MODeleteStatement *)query;
- (void)deletePlace:(Place *)place;
- (void)deletePlaceArray:(NSArray *)array;
- (void)deleteById:(NSNumber *)anId;
- (void)deleteWhere:(MOLExp *)where;

- (BOOL)isEqualByPK:(Place *)place1 and:(Place *)place2;

- (NSData *)getImageForPlace:(Place *)place;
- (NSData *)getImageById:(NSNumber *)anId;
- (void)setImage:(NSData *)blob forPlace:(Place *)place;
- (void)setImage:(NSData *)blob byId:(NSNumber *)anId;

@end

